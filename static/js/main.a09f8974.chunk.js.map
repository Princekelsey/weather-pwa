{"version":3,"sources":["reducer/weatherReducer.js","actions/types.js","store.js","utilities/Spinner.js","components/error/Error.js","utilities/index.js","actions/weatherActions.js","components/Weather.js","components/forcast/Details.js","components/changeLocation/Form.js","App.js","serviceWorker.js","index.js"],"names":["initialState","openWeather","cityName","description","temp","icon","apixuWeather","feel","humidity","visibility","forecast","isLoading","error","cordinates","lat","lon","locationName","state","type","payload","middleware","thunk","store","createStore","reducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","Spinner","className","role","style","margin","display","Error","API_KEY","APIXU_KEY","setLoading","Weather","calCelcius","today","useState","lati","long","coordinates","setCoordinates","setError","city","useSelector","errorLoad","temp1","temp2","weatherIcon","dispatch","useDispatch","location","a","axios","get","then","res","file","data","latitude","longitude","catch","err","getWeatherForLocation2","name","URL","Math","floor","current","temp_c","feelslike_c","condition","vis_km","forecastday","getWeatherByLocation2","getWeatherForLocation","weather","main","getWeatherByLocation1","useEffect","getLocation","getWeather","navigator","geolocation","getCurrentPosition","showPosition","position","coords","data-toggle","data-target","src","alt","Details","feelsLike","length","map","day","key","uv","date","avgtemp_c","text","Form","setCityName","getWeather1","getWeatherByCity","getWeather2","getWeatherByCity2","id","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","placeholder","onChange","e","target","value","console","log","onClick","App","Date","dd","String","getDate","padStart","month","getMonth","getDay","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a09f8974.chunk.js","sourcesContent":["import {\n  GET_LOCATION,\n  GET_WEATHER_BY_LOCATION1,\n  GET_WEATHER_BY_LOCATION2,\n  GET_WEATHER_BY_CITY1,\n  GET_WEATHER_BY_CITY2,\n  SET_ERROR,\n  SET_LOADING\n} from \"../actions/types\";\n\nexport const initialState = {\n  openWeather: {\n    cityName: \"\",\n    description: \"\",\n    temp: \"\",\n    icon: \"\"\n  },\n  apixuWeather: {\n    temp: \"\",\n    feel: \"\",\n    icon: \"\",\n    humidity: \"\",\n    visibility: \"\",\n    forecast: []\n  },\n  isLoading: false,\n  error: null,\n  cordinates: { lat: 0, lon: 0, locationName: \"Tallinn\" }\n};\n\nexport default function(state = initialState, { type, payload }) {\n  switch (type) {\n    case SET_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n\n    case GET_LOCATION:\n      return {\n        ...state,\n        cordinates: payload\n      };\n\n    case GET_WEATHER_BY_LOCATION1:\n      return {\n        ...state,\n        isLoading: false,\n        openWeather: payload\n      };\n\n    case GET_WEATHER_BY_LOCATION2:\n      return {\n        ...state,\n        isLoading: false,\n        apixuWeather: payload\n      };\n\n    case GET_WEATHER_BY_CITY1:\n      return {\n        ...state,\n        isLoading: false,\n        openWeather: payload\n      };\n\n    case GET_WEATHER_BY_CITY2:\n      return {\n        ...state,\n        isLoading: false,\n        apixuWeather: payload\n      };\n\n    case SET_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error: payload\n      };\n\n    default:\n      return state;\n  }\n}\n","export const GET_WEATHER_BY_CITY1 = \"GET_WEATHER_BY_CITY1\";\nexport const GET_WEATHER_BY_CITY2 = \"GET_WEATHER_BY_CITY2\";\nexport const GET_WEATHER_BY_LOCATION1 = \"GET_WEATHER_BY_LOCATION1\";\nexport const GET_WEATHER_BY_LOCATION2 = \"GET_WEATHER_BY_LOCATION2\";\nexport const GET_LOCATION = \"GET_LOCATION\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const SET_ERROR = \"SET_ERROR\";\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducer/weatherReducer\";\n\nexport const middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\n      : f => f\n  )\n);\n\nexport default store;\n","import React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <div\n      className=\"spinner-border text-danger\"\n      role=\"status\"\n      style={{\n        margin: \"auto\",\n        display: \"block\"\n      }}\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\n\nconst Error = () => {\n  return (\n    <div className=\"center text-white\">\n      <h3>Error getting Weatherinformation</h3>\n      <p>\n        Please make sure your location gps is enabled and give application\n        access\n      </p>\n    </div>\n  );\n};\n\nexport default Error;\n","import { createStore, applyMiddleware } from \"redux\";\nimport weatherReducer from \"../reducer/weatherReducer\";\nimport { middleware } from \"../store\";\n// import {initialState} from '../reducer/weatherReducer'\n\nexport const API_KEY = \"30f2e970b268622a6f540af7de8dff1b\";\nexport const WORLDWEATHER = \"d77a9693cc4941448ce202449191708\";\nexport const APIXU_KEY = \"28eebc0ec56a40d6a59190936191708\";\n\nexport const testStore = initialState => {\n  const createStoreWithMiddleware = applyMiddleware(...middleware)(createStore);\n  return createStoreWithMiddleware(weatherReducer, initialState);\n};\n","import {\n  GET_LOCATION,\n  GET_WEATHER_BY_LOCATION1,\n  GET_WEATHER_BY_LOCATION2,\n  GET_WEATHER_BY_CITY1,\n  GET_WEATHER_BY_CITY2,\n  SET_ERROR,\n  SET_LOADING\n} from \"./types\";\nimport { API_KEY, APIXU_KEY } from \"../utilities/index\";\nimport axios from \"axios\";\n\nexport const getWeatherByLocation1 = (lat, lon) => async dispatch => {\n  const URL = `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}`;\n  dispatch(setLoading());\n  await axios\n    .get(URL)\n    .then(res => {\n      const file = {\n        cityName: res.data.name,\n        description: res.data.weather[0].description,\n        temp: res.data.main.temp,\n        icon: res.data.weather[0].icon\n      };\n      dispatch({\n        type: GET_WEATHER_BY_LOCATION1,\n        payload: file\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERROR,\n        payload: err\n      });\n    });\n};\n\nexport const getWeatherByLocation2 = locationName => async dispatch => {\n  const URL = `http://api.apixu.com/v1/forecast.json?key=${APIXU_KEY}&q=${locationName} &days=3`;\n  dispatch(setLoading());\n  await axios\n    .get(URL)\n    .then(res => {\n      const file = {\n        temp: Math.floor(res.data.current.temp_c),\n        feel: Math.floor(res.data.current.feelslike_c),\n        icon: res.data.current.condition.icon,\n        humidity: res.data.current.humidity,\n        visibility: res.data.current.vis_km,\n        forecast: res.data.forecast.forecastday\n      };\n      dispatch({\n        type: GET_WEATHER_BY_LOCATION2,\n        payload: file\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERROR,\n        payload: err\n      });\n    });\n};\n\nexport const setLoading = () => ({\n  type: SET_LOADING\n});\n\nexport const getWeatherByCity = cityName => async dispatch => {\n  const URL = `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY}`;\n  dispatch(setLoading());\n  await axios\n    .get(URL)\n    .then(res => {\n      const file = {\n        cityName: res.data.name,\n        description: res.data.weather[0].description,\n        temp: res.data.main.temp,\n        icon: res.data.weather[0].icon\n      };\n      dispatch({\n        type: GET_WEATHER_BY_CITY1,\n        payload: file\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERROR,\n        payload: err\n      });\n    });\n};\n\nexport const getWeatherByCity2 = cityName => async dispatch => {\n  const URL = `http://api.apixu.com/v1/forecast.json?key=${APIXU_KEY}&q=${cityName} &days=3`;\n  dispatch(setLoading());\n  await axios\n    .get(URL)\n    .then(res => {\n      const file = {\n        temp: Math.floor(res.data.current.temp_c),\n        feel: Math.floor(res.data.current.feelslike_c),\n        icon: res.data.current.condition.icon,\n        humidity: res.data.current.humidity,\n        visibility: res.data.current.vis_km,\n        forecast: res.data.forecast.forecastday\n      };\n      dispatch({\n        type: GET_WEATHER_BY_CITY2,\n        payload: file\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERROR,\n        payload: err\n      });\n    });\n};\n\nexport const getUserLocation = () => async dispatch => {\n  const URL = \"https://api.ip2loc.com/IxHtXPOBATWj1ktY7QjZGO6NYTBghl8J/detect\";\n  dispatch(setLoading());\n  await axios\n    .get(URL)\n    .then(res => {\n      const file = {\n        lat: res.data.location.latitude,\n        lon: res.data.location.longitude,\n        locationName: res.data.location.city\n      };\n      dispatch({\n        type: GET_LOCATION,\n        payload: file\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERROR,\n        payload: err\n      });\n    });\n};\n","import React, { useEffect, useState } from \"react\";\nimport Spinner from \"../utilities/Spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Error from \"../components/error/Error\";\nimport {\n  getUserLocation,\n  getWeatherByLocation1,\n  getWeatherByLocation2\n} from \"../actions/weatherActions\";\n\nconst Weather = ({ calCelcius, today }) => {\n  const [coordinates, setCoordinates] = useState({ lati: 0, long: 0 });\n  const [error, setError] = useState(false);\n\n  // get state from store\n  const city = useSelector(state => state.openWeather.cityName);\n  const errorLoad = useSelector(state => state.error);\n  const description = useSelector(state => state.openWeather.description);\n  const temp1 = useSelector(state => calCelcius(state.openWeather.temp));\n  const temp2 = useSelector(state => state.apixuWeather.temp);\n  const isLoading = useSelector(state => state.isLoading);\n  const locationName = useSelector(state => state.cordinates.locationName);\n  const weatherIcon = useSelector(state => state.openWeather.icon);\n\n  // dispatch functions\n  const dispatch = useDispatch();\n  const location = () => dispatch(getUserLocation());\n  const getWeatherForLocation2 = name => dispatch(getWeatherByLocation2(name));\n  const getWeatherForLocation = (lat, lon) =>\n    dispatch(getWeatherByLocation1(lat, lon));\n\n  useEffect(() => {\n    getLocation();\n    location();\n    getWeather();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [coordinates.lati]);\n\n  // initial to get weather on app load\n  const getWeather = () => {\n    getWeatherForLocation(coordinates.lati, coordinates.long);\n    getWeatherForLocation2(locationName);\n  };\n\n  // get location coordinates\n  const getLocation = () => {\n    const navigation = navigator.geolocation;\n    if (navigation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      setError(true);\n    }\n  };\n\n  const showPosition = position => {\n    setCoordinates({\n      ...coordinates,\n      lati: position.coords.latitude,\n      long: position.coords.longitude\n    });\n  };\n\n  return (\n    <div className=\"container text-center py-4 landing\">\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <div className=\"bg-transparent text-white\">\n          <div className=\" text-white py-4 \">\n            <h1>\n              {city}\n              <span>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary ml-4 \"\n                  data-toggle=\"modal\"\n                  data-target=\"#formModal\"\n                >\n                  Change location\n                </button>\n              </span>\n            </h1>\n\n            <h4 className=\"\"> {description}</h4>\n            <h6>{today}</h6>\n          </div>\n\n          <img\n            src={`http://openweathermap.org/img/wn/${weatherIcon}@2x.png`}\n            className=\"\"\n            alt=\"Weather icon\"\n          />\n\n          <div className=\"\">\n            \n\n            <h1>\n              {temp1 ? <span className=\"px-4 \">{temp1}&deg;</span> : null}\n              {temp2 ?  <span className=\"px-4 \">{temp2}&deg;</span>: null}\n              \n            \n            </h1>\n          </div>\n        </div>\n      )}\n      {error || errorLoad ? <Error /> : null}\n    </div>\n  );\n};\n\nexport default Weather;\n","import React from \"react\";\nimport Spinner from \"../../utilities/Spinner\";\nimport { useSelector } from \"react-redux\";\n\nconst Details = ({ calCelcius }) => {\n  const weatherIcon = useSelector(state => state.openWeather.icon);\n  const feelsLike = useSelector(state => state.apixuWeather.feel);\n  const humidity = useSelector(state => state.apixuWeather.humidity);\n  const visibility = useSelector(state => state.apixuWeather.visibility);\n  const temp1 = useSelector(state => calCelcius(state.openWeather.temp));\n  const temp2 = useSelector(state => state.apixuWeather.temp);\n  const forecast = useSelector(state => state.apixuWeather.forecast);\n  const isLoading = useSelector(state => state.isLoading);\n  const description = useSelector(state => state.openWeather.description);\n  const errorLoad = useSelector(state => state.error);\n\n  return (\n    <div>\n      {forecast.length === 0 && !isLoading ? (\n        <Spinner />\n      ) : (\n        <div className=\" card-deck \">\n          <div className=\"card bg-transparent shadow-lg\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title  text-warning \">Details</h5>\n              <hr className=\"hr-ab\" />\n              <div className=\"d-flex justify-content-center\">\n                <div>\n                  <img\n                    src={`http://openweathermap.org/img/wn/${weatherIcon}@2x.png`}\n                    className=\"\"\n                    alt=\"...\"\n                  />\n                </div>\n\n                <div className=\"ml-4 text-center\">\n                  <p className=\"card-text text-white \">\n                    Feels like : {feelsLike}&deg;\n                  </p>\n                  <p className=\"card-text text-white \">Humdity : {humidity}%</p>\n                  <p className=\"card-text text-white \">\n                    Visibility : {visibility} km\n                  </p>\n                </div>\n                <div />\n              </div>\n\n              <p className=\"card-text py-4 text-white\">\n                Today - {description} currently, it's {temp1}&deg; and {temp2}\n                &deg; from two weather forecast\n              </p>\n            </div>\n          </div>\n          <div className=\"card bg-transparent shadow-lg \">\n            <div className=\"card-body\">\n              <h5 className=\"card-title text-warning\">Forecast</h5>\n              <hr className=\"hr-ab\" />\n              <div className=\"d-flex justify-content-between align-items-center text-center text-white\">\n                {forecast.map(day => {\n                  return (\n                    <div key={day.day.uv}>\n                      <div className=\"py-4\">{day.date}</div>\n                      <div>\n                        <img\n                          src={day.day.condition.icon}\n                          className=\"\"\n                          alt=\"...\"\n                        />\n                      </div>\n\n                      <div className=\"\">\n                        {Math.floor(day.day.avgtemp_c)}&deg;\n                      </div>\n                      <p>{day.day.condition.text}</p>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {errorLoad && null}\n    </div>\n  );\n};\n\nexport default Details;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getWeatherByCity,\n  getWeatherByCity2\n} from \"../../actions/weatherActions\";\n\nconst Form = () => {\n  const [cityName, setCityName] = useState(\"\");\n\n  // initialize didpatch\n  const dispatch = useDispatch();\n  const getWeather1 = city => dispatch(getWeatherByCity(city));\n  const getWeather2 = city => dispatch(getWeatherByCity2(city));\n\n  const handleChange = e => {\n    setCityName(e.target.value);\n    console.log(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    getWeather1(cityName);\n    getWeather2(cityName);\n    setCityName(\"\");\n  };\n\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"formModal\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n              City Name\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"input-group input-group-sm mb-3\">\n              <div className=\"input-group-prepend\" />\n              <input\n                aria-label = 'choose city'\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"City Name\"\n                onChange={handleChange}\n                value={cityName}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n            >\n              Close\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-dismiss=\"modal\"\n              onClick={handleSubmit}\n            >\n              Get Weather\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.min.css\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nimport Weather from \"./components/Weather\";\nimport Details from \"./components/forcast/Details\";\nimport Form from \"./components/changeLocation/Form\";\n\nfunction App() {\n  let today = new Date();\n  let dd = String(today.getDate()).padStart(2, \"0\");\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n  const weekdays = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n  let month = today.getMonth();\n  let day = today.getDay();\n  today = `${weekdays[day]}, ${dd}   ${months[month]} `;\n\n  const calCelcius = temp => {\n    const cel = Math.floor(temp - 273.15);\n    return cel;\n  };\n\n  return (\n    <Provider store={store}>\n      <div className=\"container \">\n        <Weather calCelcius={calCelcius} />\n        <Details calCelcius={calCelcius} />\n        <Form />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}